name: Fetch and Commit with GitHub App Token

on:
  workflow_dispatch:
  schedule:
    - cron: "36 */8 * * *"

concurrency: production

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.FETCH_APP_ID }}
          private-key: ${{ secrets.FETCH_APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run fetchTempoData
        run: npm run fetch-and-update-tempo-data

      - name: Commit changes
        continue-on-error: true
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global user.name 'GitHub App'
          git config --global user.email 'github-app@example.com'
          git add .
          git commit -m "Update JSON data"
          git push

      - name: Build frontend
        run: |
          REACT_APP_VERSION=$VERSION npm run build
        env:
          VERSION: ${GITHUB_REF#refs/tags/}

      - name: Compile and run injectVersion script
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Version: $VERSION"
          node ./services/injectVersion.js $VERSION

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: build
          if-no-files-found: error
          retention-days: 1

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend_build

      - name: Deploy Frontend to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOSTNAME }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          local-dir: "frontend_build/"
          server-dir: ${{ secrets.FTP_SERVER_DIR }}