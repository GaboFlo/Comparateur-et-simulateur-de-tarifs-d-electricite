name: Build and Deploy Frontend

on: push

jobs:
  check-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check versions
        run: |
          FRONT_VERSION=$(node -p "require('./front/package.json').version")
          BACK_VERSION=$(node -p "require('./server/package.json').version")
          if [ "$FRONT_VERSION" != "$BACK_VERSION" ]; then
            echo "Version mismatch: front ($FRONT_VERSION) and back ($BACK_VERSION)"
            exit 1
          fi
          echo "Versions match: $FRONT_VERSION"

  build-front:
    runs-on: ubuntu-latest
    needs: check-versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Use package.json version
        run: echo "VERSION=$(node -p 'require(\"./front/package.json\").version')" >> $GITHUB_ENV

      - name: Build frontend
        run: |
          cd front
          npm ci
          REACT_APP_VERSION=$VERSION npm run build
          mv build ../frontend_build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend_build
          retention-days: 1

  deploy-front:
    runs-on: ubuntu-latest
    needs: build-front
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend_build

      - name: Deploy to SFTP
        uses: wearejh/sftp-action@v1.0.0
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 22
          localPath: "frontend_build/*"
          remotePath: ${{ secrets.SFTP_TARGET_DIR }}
          args: "-o StrictHostKeyChecking=no"
